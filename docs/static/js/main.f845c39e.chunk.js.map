{"version":3,"sources":["components/map.js","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Map","mapContainer","useRef","map","useState","lng","lat","zoom","process","API_KEY","useEffect","current","maplibregl","container","style","center","addControl","NavigationControl","className","href","src","alt","ref","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAKe,SAASA,IACtB,IAAMC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,MACnB,EAAcE,mBAAS,SAAhBC,EAAP,oBACA,EAAcD,mBAAS,SAAhBE,EAAP,oBACA,EAAeF,mBAAS,IAAjBG,EAAP,oBACA,EAAkBH,mBAASI,wBAApBC,EAAP,oBAaA,OAXAC,qBAAU,WACJP,EAAIQ,UACRR,EAAIQ,QAAU,IAAIC,IAAWZ,IAAI,CAC/Ba,UAAWZ,EAAaU,QACxBG,MAAM,wDAAD,OAA0DL,GAC/DM,OAAQ,CAACV,EAAKC,GACdC,KAAMA,IAERJ,EAAIQ,QAAQK,WAAW,IAAIJ,IAAWK,kBAAqB,iBAI3D,sBAAKC,UAAU,WAAf,UACE,mBAAGC,KAAK,2BAA2BD,UAAU,YAA7C,SAAyD,qBAAKE,IAAI,8CAA8CC,IAAI,oBACpH,qBAAKC,IAAKrB,EAAciB,UAAU,W,MCxBzB,SAASK,IAEtB,OACE,qBAAKL,UAAU,UAAf,SACE,sD,MCOSM,MATf,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,cAACK,EAAD,IACA,cAACvB,EAAD,QCGSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f845c39e.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport './map.css';\n\nexport default function Map(){\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng] = useState(139.753);\n  const [lat] = useState(35.6844);\n  const [zoom] = useState(14);\n  const [API_KEY] = useState(process.env.REACT_APP_API_KEY);\n\n  useEffect(() => {\n    if (map.current) return; //stops map from intializing more than once\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: `https://api.maptiler.com/maps/streets/style.json?key=${API_KEY}`,\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.addControl(new maplibregl.NavigationControl(), 'top-right');\n  });\n\n  return (\n    <div className=\"map-wrap\">\n      <a href=\"https://www.maptiler.com\" className=\"watermark\"><img src=\"https://api.maptiler.com/resources/logo.svg\" alt=\"MapTiler logo\" /></a>\n      <div ref={mapContainer} className=\"map\" />\n    </div>\n  );\n}","import React from 'react';\nimport './navbar.css';\n\nexport default function Navbar(){\n\n  return (\n    <div className=\"heading\">\n      <h1>This is my map App</h1>\n    </div>\n  );\n}\n","import React from 'react';\nimport Map from './components/map.js';\nimport Navbar from './components/navbar.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Map/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}